name: Sync integration labels

on:
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  sync-labels:
    runs-on: ubuntu-latest
    permissions:
      issues: write # This is required to create/push the new labels
    steps:
      - name: Sync integration labels
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            // Fetch all integrations from Home Assistant
            const response = await fetch('https://next.home-assistant.io/integrations.json');
            const integrationsData = await response.json();
            
            // Get all existing labels with pagination
            const existingLabels = [];
            let page = 1;
            let hasMore = true;
            
            while (hasMore) {
              const labelsResponse = await github.rest.issues.listLabelsForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100,
                page: page
              });
              
              existingLabels.push(...labelsResponse.data);
              hasMore = labelsResponse.data.length === 100;
              page++;
            }
            
            const existingLabelNames = new Set(existingLabels.map(label => label.name));
            
            // Create or update labels for each integration
            for (const [domain, integration] of Object.entries(integrationsData)) {
              const labelName = `integration: ${domain}`;
              const labelDescription = integration.title;
              
              if (existingLabelNames.has(labelName)) {
                // Update existing label description if needed
                const existingLabel = existingLabels.find(label => label.name === labelName);
                if (existingLabel.description !== labelDescription) {
                  await github.rest.issues.updateLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: labelName,
                    description: labelDescription
                  });
                  console.log(`Updated label: ${labelName}`);
                }
              } else {
                // Create new label
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: labelName,
                  description: labelDescription,
                  color: 'ededed'  // Light gray color for integration labels
                });
                console.log(`Created label: ${labelName}`);
              }
            }
            
            console.log(`Processed ${Object.keys(integrationsData).length} integrations`);
